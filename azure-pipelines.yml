trigger:
  - master

schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
        - main

pool:
  vmImage: "windows-2022"

name: $(Build.Reason)_commit-$(Build.SourceVersion)_$(Date:yyyyMMdd_HHmmss)

variables:
  solution: "**/*.sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"
  semVerDate: $(Get-Date -Format yyyyMMdd+HHmmss)
  buildScripsPath: "$(System.DefaultWorkingDirectory)/Build"
  directoryBuildPropsPath: "$(System.DefaultWorkingDirectory)/Directory.Build.props"

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      version: 9.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    displayName: Restore NuGet packages
    inputs:
      command: "restore"
      restoreSolution: "**/*.sln"
      feedsToUse: "select"

  - task: PowerShell@2
    displayName: Update CSPROJ Files
    inputs:
      filePath: "$(buildScripsPath)/patch-build-props.ps1"
      arguments: '-DirectoryBuildPropsPath $(directoryBuildPropsPath) -BuildId $(Build.BuildId) -InformationalVersionSuffix "$(semVerDate)"'

  - task: PowerShell@2
    displayName: Update Build Number From Version
    inputs:
      filePath: "$(buildScripsPath)/update-build-number-from-version.ps1"
      arguments: "-PathToCsprojFile $(directoryBuildPropsPath)"

  #- task: PowerShell@2
  #  displayName: Set GeneratePackageOnBuild Property = true in CSPROJ
  #  inputs:
  #    filePath: "$(buildScripsPath)/update-csproj-generate-package-on-build.ps1"
  #    arguments: '-PathToCsprojFile $(System.DefaultWorkingDirectory)\BricklinkSharp.Client\BricklinkSharp.Client.csproj'

  - task: DotNetCoreCLI@2
    displayName: Build Solution
    inputs:
      command: 'build'
      projects: '$(solution)'
      arguments: '-c $(buildConfiguration) -p:GeneratePackageOnBuild=true'

  #- task: VSBuild@1
  #  displayName: Build Solution
  #  inputs:
  #    solution: "$(solution)"
  #    platform: "$(buildPlatform)"
  #    configuration: "$(buildConfiguration)"

  - task: CmdLine@2
    displayName: Run Unit Tests
    inputs:
      script: |
        setlocal
        set ACCESS_KEY=$(EXCHANGE_RATES_API_ACCESS_KEY)
        dotnet test -c $(buildConfiguration)

  - task: CopyFiles@2
    displayName: Copy Bin To ArtifactsStagingDirectory
    inputs:
      SourceFolder: "$(System.DefaultWorkingDirectory)"
      Contents: BricklinkSharp.Client\bin\$(BuildConfiguration)\**
      TargetFolder: "$(Build.ArtifactsStagingDirectory)"

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      PathtoPublish: "$(Build.ArtifactsStagingDirectory)"
      ArtifactName: "drop"
      publishLocation: "Container"
